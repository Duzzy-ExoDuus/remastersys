#!/bin/bash
###################################################################
#  REMASTERSYS                                                    #
#    Under the GNU GPL2 License                                   #
#    Copyright (C) 2013-2022 Daniel "Nerun" Rodrigues             #
#    Copyright (C) 2007-2012 Tony "Fragadelic" Brijeski           #
#    Full copyright notice: /usr/share/doc/remastersys/copyright  #
###################################################################

# SYSTEM LOCALIZATION
# Target to file:
# /usr/share/locale/(language code)/LC_MESSAGES/remastersys-gui.mo
TEXTDOMAIN=remastersys-gui

# Load version file and settings
. /etc/remastersys/remastersys.version
. /etc/remastersys.conf

Pick=$"Pick"
Info=$"Info"
Yes=$"Yes"
No=$"No"
Quit=$"Quit"

DIALOGMENU="`which yad` --window-icon=/usr/share/icons/hicolor/16x16/apps/remastersys.png --width=750 --center"
DIALOG="`which yad` --window-icon=/usr/share/icons/hicolor/16x16/apps/remastersys.png --center --fixed"
TITLE="--always-print-result --dialog-sep --image=/usr/share/icons/hicolor/48x48/apps/remastersys.png --title="
TEXT="--text="
ENTRY="--entry "
ENTRYTEXT="--entry-text "
FILESELECTION="--file "
MENU="--list --column=$Pick --column=$Info"
YESNO=" --button=$Yes:0 --button=$No:1 "
MSGBOX=" --button=Ok:0 "
TITLETEXT="Remastersys"

# check if running with root privileges
if [ $(whoami) != "root" ]; then
    $DIALOG $TITLE"$TITLETEXT" $MSGBOX $TEXT$"ERROR: This script must run as superuser. Try with \"sudo\"."
    exit 1
fi

Choose=$"Choose what you want to do:"

BackupString=$"Creates a full system backup including user files."
DistString=$"Creates a 'distribution' on Live CD/DVD: will be created both file system (CDFS)\nand writable image (ISO)."
DistCDFSString=$"Creates only the file system (CDFS) of a Live CD/DVD: ideal solution if you want\nto add files to the CD later."
DistISOString=$"Creates only the ISO of a Live CD/DVD: the file system (CDFS) must have been\ncreated previously."
DistBootString=$"Selects a background image for the Live CD/DVD boot menu."
DistGrubString=$"Selects a background image for the GRUB bootloader."
DistSkelString=$"Makes the current user's custom settings the default Live CD/DVD system settings."
ClearSkelString=$"Clears /etc/skel settings to remove all customizations."
ClearString=$"Clears Remastersys working folder."
SettingsString=$"Modify Remastersys settings."
LogString=$"View the Remastersys log file."
AboutString=$"Displays information about Remastersys."

ClearSkel=$"ClearSkel"
Clear=$"Clear"
Settings=$"Settings"
About=$"About"

mainmenu() {
    CHOICES=`$DIALOGMENU $TITLE"$TITLETEXT" --height=510 --button=Ok:0 --button="$Quit":1 $MENU $TEXT"$Choose" \
    Backup "$BackupString" \
    Dist "$DistString" \
    DistCDFS "$DistCDFSString" \
    DistISO "$DistISOString" \
    DistBoot "$DistBootString" \
    DistGrub "$DistGrubString" \
    DistSkel "$DistSkelString" \
    "$ClearSkel" "$ClearSkelString" \
    "$Clear" "$ClearString" \
    "$Settings" "$SettingsString" \
    Log "$LogString" \
    "$About" "$AboutString"`

    if [ "$?" = "0" ]; then
        CHOICE=$(echo $CHOICES | cut -d "|" -f 1)
    else
        exit 0
    fi

    if [ "$CHOICE" = "Backup" ]; then
        backupmenu
    elif [ "$CHOICE" = "Dist" ]; then
        distmenu
    elif [ "$CHOICE" = "DistCDFS" ]; then
        distcdfsmenu
    elif [ "$CHOICE" = "DistISO" ]; then
        distisomenu
    elif [ "$CHOICE" = "DistBoot" ]; then
        distbootmenu
    elif [ "$CHOICE" = "DistGrub" ]; then
        distgrubmenu
    elif [ "$CHOICE" = "DistSkel" ]; then
        distskelmenu
    elif [ "$CHOICE" = "$ClearSkel" ]; then
        find /etc/skel/ -type f -exec rm -f '{}' \;
        $DIALOG $TITLE"$TITLETEXT" $MSGBOX $TEXT$"Configuration files in /etc/skel have been deleted."
        mainmenu
    elif [ "$CHOICE" = "$Clear" ]; then
        cleanmenu
    elif [ "$CHOICE" = "$Settings" ]; then
        modifymenu
    elif [ "$CHOICE" = "Log" ]; then
        if [ -f "$WORKDIR/remastersys/remastersys.log" ]; then
            $DIALOG $TITLE"$TITLETEXT" --width=750 --height=400 --text-info --filename="$WORKDIR/remastersys/remastersys.log"
        else
            $DIALOG $TITLE"$TITLETEXT" $MSGBOX $TEXT$"The remastersys.log file does not exist."
        fi

        mainmenu

    elif [ "$CHOICE" = "$About" ]; then
        $DIALOG $TITLE"$TITLETEXT" --center --width=470 $MSGBOX $TEXT$"Remastersys version $VERSION.\n\nThis is a graphical user interface created in YAD for\nRemastersys: a command-line tool that turns an installed\nDebian system into a distribution on Live CD or DVD. It can\nalso be used as a full backup tool that includes /home\nfolder and all users data.\n\nMaintained by Daniel 'Nerun' Rodrigues.\n\nFork of Tony Brijeski's Remastersys (discontinued).\n\nVisit https://github.com/nerun/remastersys for more\ninformation."
        mainmenu
    else
        exit 0
    fi
}

################################################################################
# NEED INTERNATIONALIZATION FROM THIS POINT AHEAD ################### ALPHA 13 #
################################################################################

# Common procedure to backupmenu(), distmenu(), distcdfsmenu() e distisomenu().
SquashfsSizeCheckup(){
    SQUASHFSSIZE=$(ls -s $WORKDIR/remastersys/ISOTMP/live/filesystem.squashfs | awk -F " " '{print $1}')
    
    if [ "$SQUASHFSSIZE" -gt "3999999" ]; then
        $DIALOG $TITLE"$TITLETEXT" $MSGBOX $TEXT"The compressed filesystem is larger than the\niso9660 specification allows for a single file.\n\nYou must try to reduce the amount of data you\nare backing up and try again."
        exit 1
    fi
}

# Common procedure to backupmenu(), distmenu() e distisomenu().
FilesReady(){
    $DIALOG $TITLE"$TITLETEXT" $MSGBOX $TEXT"Your $CUSTOMISO and $CUSTOMISO.md5 files are ready \nin $WORKDIR/remastersys.\nIt is recommended to test it in a virtual machine or \non a rewritable cd/dvd to ensure it works as desired.\n\nClick on OK to return to the main menu."
    mainmenu
}

backupmenu() {
    $DIALOG $TITLE"$TITLETEXT" $MSGBOX $TEXT"You have selected Backup Mode.\n\nDo not interrupt this process.\n\nClick OK to Start the Backup LiveCD/DVD process."
    xterm -fn 9x15 -e "remastersys backup"

    SquashfsSizeCheckup

    FilesReady
}

distmenu() {
    $DIALOG $TITLE"$TITLETEXT" $MSGBOX $TEXT"You have selected Dist Mode.\n\nClick OK to Start the Distributable LiveCD/DVD process."
    xterm -fn 9x15 -e "remastersys dist"

    SquashfsSizeCheckup

    FilesReady
}

distcdfsmenu() {
    $DIALOG $TITLE"$TITLETEXT" $MSGBOX $TEXT"You have selected Dist CDFS Mode.  Click OK to Start the Distributable LiveCD/DVD filesystem build process."
    xterm -fn 9x15 -e "remastersys dist cdfs"

    SquashfsSizeCheckup

    $DIALOG $TITLE"$TITLETEXT" $MSGBOX $TEXT"Your livecd filesystem is ready in $WORKDIR/remastersys.\nYou can now add files to the cd and \nthen run the iso only option when you are done.\n\nClick on OK to return to the main menu."

    mainmenu
}

distisomenu() {
    if [ -f "$WORKDIR/remastersys/ISOTMP/live/filesystem.squashfs" ]; then
        $DIALOG $TITLE"$TITLETEXT" $MSGBOX $TEXT"You have selected Dist ISO Mode.\n\nClick OK to create the iso file."
        xterm -fn 9x15 -e "remastersys dist iso"
        
        SquashfsSizeCheckup

        FilesReady
    else
        $DIALOG $TITLE"$TITLETEXT" $MSGBOX $TEXT"The livecd filesystem does not exist.\n\nClick OK to go back to the main menu and\ntry the normal Dist mode or the Dist CDFS again."
        mainmenu
        exit 0
    fi
}

distbootmenu() {
    $DIALOG $TITLE"$TITLETEXT" --width=450 $MSGBOX $TEXT"This will allow you to choose \
your own picture to \nbe the background for the LIVE boot menu. \n\
Please note that it MUST be a 640x480 pixel png file.  \nYou must create \
this picture or resize it with a proper \ngraphics editor as this tool does \
not have the ability to change the size \nor type of picture. \
\n\
\n\
Click OK to continue."

    BOOTPIC=$($DIALOG $TITLE"$TITLETEXT" --width=750 --height=400 $FILESELECTION)
    
    # BOOTPIC extension
    BOOTPICext="${BOOTPIC: -4}"

    if [ "${BOOTPICext,,}" == ".png" ]; then # Extension lowercase

        cp $BOOTPIC /etc/remastersys/isolinux/splash.png

        $DIALOG $TITLE"$TITLETEXT" --width=430 $MSGBOX $TEXT"$BOOTPIC has been copied \
to \n/etc/remastersys/isolinux/splash.png becoming \nthe default background \
for the LIVE menu. \nClick OK to continue."
    else
        $DIALOG $TITLE"$TITLETEXT" --width=430 $MSGBOX $TEXT"You didn't select any file. \n\nClick OK to continue."
    fi

    mainmenu
}

distgrubmenu() {
    $DIALOG $TITLE"$TITLETEXT" --width=450 $MSGBOX $TEXT"This will allow you to choose \
your own png picture \nto be the background for the GRUB boot loader. \
Click OK to continue."

    GRUBPIC=$($DIALOG $TITLE"$TITLETEXT" --width=750 --height=400 $FILESELECTION)
    
    # GRUBPIC extension
    GRUBPICext="${GRUBPIC: -4}"

    if [ "${GRUBPICext,,}" == ".png" ]; then # Extension lowercase
        $DIALOG $TITLE"$TITLETEXT" --width=430 $MSGBOX $TEXT"$GRUBPIC has been \ncopied \
to /etc/remastersys/grub.png \nand is the default background for grub. \nClick \
OK to update grub with the new settings \nso you can see your picture on the next boot."

        if [ "$?" = "0" ]; then
            $DIALOG $TITLE"$TITLETEXT" --width=300 --no-buttons --progress --pulsate $TEXT"Updating grub now. \n\
Please wait." &
            PICFILE=$(echo $GRUBPIC | awk -F"/" '{print $NF}')
            cp $GRUBPIC /etc/remastersys/grub.png
            NEWGRUBPIC="/etc/remastersys/grub.png"

            sed -i -e "/#Grub Background/d" /etc/default/grub
            sed -i -e "/GRUB_BACKGROUND/d" /etc/default/grub

            cat >> /etc/default/grub <<FOO
#Grub Background
GRUB_BACKGROUND="$NEWGRUBPIC"
FOO

            update-grub
            killall -KILL yad

            $DIALOG $TITLE"$TITLETEXT" --width=400 $MSGBOX $TEXT"GRUB has been updated. Click OK to continue."
        fi
    else
        $DIALOG $TITLE"$TITLETEXT" --width=430 $MSGBOX $TEXT"You didn't select any file. \n\nClick OK to continue."
    fi

    mainmenu
}

distskelmenu() {
    $DIALOG $TITLE"$TITLETEXT" $MSGBOX $TEXT"This will put your user desktop \
and application settings \nin /etc/skel so they become the default for the live system. \n\
This includes desktop background and other personalized \napplication settings that \
aren't hardcoded to the current \nusers home folder. \
\n\
Need to compile a list of valid users. \n\
It may take a few seconds to complete so be patient. \n\
Click OK to prepare the list."

    j="0"
    i="1000"

    while [ "$(cat /etc/passwd | awk -F ":" '{print $3}' | grep $i)" != "" ]; do
        for i in $(seq 1000 1 1010); do
            if [ "$(cat /etc/passwd | awk -F ":" '{print $3}' | grep $i)" != "" ]; then
                userchoice[$j]="$(grep $i /etc/passwd | awk -F ":" '{print $1}')"
                j=$(expr $j + 1)
            fi
        done
    done

    SKELUSER=`$DIALOG $TITLE"$TITLETEXT" $MENU $TEXT"\nPlease select a user whose \
settings \nyou would like to make the default." \
    ${userchoice[0]} ${userchoice[0]} \
    ${userchoice[1]} ${userchoice[1]} \
    ${userchoice[2]} ${userchoice[2]} \
    ${userchoice[3]} ${userchoice[3]} \
    ${userchoice[4]} ${userchoice[4]} \
    ${userchoice[5]} ${userchoice[5]} \
    ${userchoice[6]} ${userchoice[6]} \
    ${userchoice[7]} ${userchoice[7]} \
    ${userchoice[8]} ${userchoice[8]} \
    ${userchoice[9]} ${userchoice[9]}`

    SKELUSER=$(echo $SKELUSER | cut -d "|" -f 1)

    if [ "$SKELUSER" != "" ]; then
        cd $(grep "^$SKELUSER:" /etc/passwd | awk -F ":" '{print $6}')
        PWD=$(pwd)
        TESTUSER=$(grep "$PWD" /etc/passwd | awk -F ":" '{print $1}')

        if [ "$TESTUSER" != "$SKELUSER" ]; then
            $DIALOG $TITLE"$TITLETEXT" $MSGBOX $TEXT"The user you chose does not have \
a proper home directory.  \nClick OK to return to the main menu."
            echo "Need to be in the user directory. Exiting."
            mainmenu
        fi

        $DIALOG $TITLE"$TITLETEXT" --no-buttons --progress --pulsate $TEXT"Copying your $SKELUSER user settings to /etc/skel now. \n\
Please wait." &

        remastersys-skelcopy $SKELUSER

        killall -KILL yad

        $DIALOG $TITLE"$TITLETEXT" $MSGBOX $TEXT"The settings for $SKELUSER have \
been copied to /etc/skel.  \nIn order to test it out you need to create a new user \
and see \nif your settings have been applied.  \n\
Click OK to return to the main menu."

    else
        $DIALOG $TITLE"$TITLETEXT" $MSGBOX $TEXT"You didn't select any user. \n\nClick OK to continue."
    fi

    mainmenu
}

modifymenu() {
    if [ "$SQUASHFSOPTS" = "" ]; then
        SQUASHFSOPTS="-no-recovery -always-use-fragments -b 1M -comp zstd"
    fi

    CHOICES=$($DIALOGMENU $TITLE"$TITLETEXT" --height=330 --button=Salvar:0 --button=Voltar:1 --form \
--field="Live Username" "$LIVEUSER" \
--field="Live System Name" "$LIVECDLABEL" \
--field="Live ISO Filename" "$CUSTOMISO" \
--field="Live Boot using GRUB or ISOLINUX" "$ISOBOOT" \
--field="Working Directory for Remastersys" "$WORKDIR" \
--field="Options for mksquashfs" " $SQUASHFSOPTS" \
--field="Show install icon on desktop" "$SHOWICON" \
--field="Excluded files and folders" " $EXCLUDES")

    if [ "$?" = "0" ]; then
        LIVEUSER=$(echo $CHOICES | cut -d "|" -f 1)
        LIVECDLABEL=$(echo $CHOICES | cut -d "|" -f 2)
        CUSTOMISO=$(echo $CHOICES | cut -d "|" -f 3)
        ISOBOOT=$(echo $CHOICES | cut -d "|" -f 4)
        WORKDIR=$(echo $CHOICES | cut -d "|" -f 5)
        SQUASHFSOPTS=$(echo $CHOICES | cut -d "|" -f 6)
        SHOWICON=$(echo $CHOICES | cut -d "|" -f 7)
        EXCLUDES=$(echo $CHOICES | cut -d "|" -f 8)
    else
        mainmenu
    fi

    if [ "$LIVEUSER" = "" ]; then
        LIVEUSER="live"
    fi

    #make sure live user is all lowercase
    LIVEUSER="$(echo $LIVEUSER | awk '{print tolower ($0)}')"

    if [ "$LIVECDLABEL" = "" ]; then
        LIVECDLABEL="Custom Live CD"
    fi

    if [ "$CUSTOMISO" = "" ]; then
        CUSTOMISO="custom-live.iso"
    fi

    if [ "$ISOBOOT" = "grub" -o "$ISOBOOT" = "GRUB" ]; then
        ISOBOOT="GRUB"
    else
        ISOBOOT="ISOLINUX"
    fi

    if [ "$WORKDIR" = "" ]; then
        WORKDIR="/home/remastersys"
    fi

    if [ "$SQUASHFSOPTS" = "" ]; then
        SQUASHFSOPTS="-no-recovery -always-use-fragments -b 1M -comp zstd"
    fi

    SHOWICON="$(echo $SHOWICON | awk '{print tolower ($0)}')"

    if [ "$SHOWICON" = "1" ]; then
        SHOWICON="1"
    elif [ "$SHOWICON" = "yes" ]; then
        SHOWICON="1"
    elif [ "$SHOWICON" = "true" ]; then
        SHOWICON="1"
    else
        SHOWICON="0"
    fi

    cat > /etc/remastersys.conf <<FOO
#Remastersys Global Configuration File

# This is the temporary working directory and won't be included on the cd/dvd
WORKDIR="$WORKDIR"

# Here you can add any other files or directories to be excluded from the live filesystem
# Separate each entry with a space
EXCLUDES="$EXCLUDES"

# Here you can change the livecd/dvd username
LIVEUSER="$LIVEUSER"

# Here you can change the name of the livecd/dvd label
LIVECDLABEL="$LIVECDLABEL"

# Here you can change the name of the ISO file that is created
CUSTOMISO="$CUSTOMISO"

# Here you can change the boot method for the live - GRUB or ISOLINUX
ISOBOOT="$ISOBOOT"

# Options for mksquashfs
#Default is -no-recovery -always-use-fragments -b 1M -comp zstd
SQUASHFSOPTS="$SQUASHFSOPTS"

#Option to show install icon on live desktop in dist mode 1=yes or true, 0=no or false
SHOWICON="$SHOWICON"
FOO

    if [ "$?" = "0" ]; then
        $DIALOG $TITLE"$TITLETEXT" $MSGBOX $TEXT"Configuration Saved. Click OK to return to the modify menu."
    else
        $DIALOG $TITLE"$TITLETEXT" $MSGBOX $TEXT"Configuration Save Error. Click OK to return to the modify menu."
    fi

    modifymenu
}

cleanmenu() {
    $DIALOG $TITLE"$TITLETEXT" $MSGBOX $TEXT"This will remove all the files from the temporary directory. Click OK to proceed."
    xterm -fn 9x15 -e "remastersys clean"
    $DIALOG $TITLE"$TITLETEXT" $MSGBOX $TEXT"Completed. Click OK to return to the main menu."
    mainmenu
}

mainmenu

